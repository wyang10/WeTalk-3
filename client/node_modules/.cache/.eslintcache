[{"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\index.js":"1","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\reportWebVitals.js":"2","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\App.js":"3","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\config.js":"4","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\RegisterPage.js":"5","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\HomePage.js":"6","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\UsersPage.js":"7","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\TwitterDetailPage.js":"8","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\FollowPage.js":"9","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\LoginPage.js":"10","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\utils.js":"11","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\components\\TwitterItem.js":"12","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\components\\UserItem.js":"13","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\components\\ReplyItem.js":"14"},{"size":534,"mtime":1668935622000,"results":"15","hashOfConfig":"16"},{"size":360,"mtime":1668935622000,"results":"17","hashOfConfig":"16"},{"size":2146,"mtime":1670325462355,"results":"18","hashOfConfig":"16"},{"size":245,"mtime":1670430740684,"results":"19","hashOfConfig":"16"},{"size":2102,"mtime":1668935900000,"results":"20","hashOfConfig":"16"},{"size":2591,"mtime":1669093534000,"results":"21","hashOfConfig":"16"},{"size":598,"mtime":1668935622000,"results":"22","hashOfConfig":"16"},{"size":1874,"mtime":1670422200952,"results":"23","hashOfConfig":"16"},{"size":1545,"mtime":1668935622000,"results":"24","hashOfConfig":"16"},{"size":1398,"mtime":1670323474962,"results":"25","hashOfConfig":"16"},{"size":265,"mtime":1668935766000,"results":"26","hashOfConfig":"16"},{"size":2411,"mtime":1670423928186,"results":"27","hashOfConfig":"16"},{"size":723,"mtime":1668610076000,"results":"28","hashOfConfig":"16"},{"size":861,"mtime":1668935622000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lovz2u",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\index.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\reportWebVitals.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\App.js",["77"],[],"import './App.css';\nimport {BrowserRouter as Router, Route, Routes,} from 'react-router-dom';\nimport {getLoginUser, setLoginUser} from \"./config\";\nimport {HomePage} from \"./pages/HomePage\";\nimport {RegisterPage} from \"./pages/RegisterPage\";\nimport {TwitterDetailPage} from \"./pages/TwitterDetailPage\";\nimport {UsersPage} from \"./pages/UsersPage\";\nimport {FollowPage} from \"./pages/FollowPage\";\nimport {LoginPage} from \"./pages/LoginPage\";\n\n\nfunction App() {\n  return (<div className=\"App\">\n    <Router>\n      <div className={\"navbar\"}>\n        <div className={\"inner\"}>\n          <div className={\"nav-item\"}>\n            <b>WeTalk</b>\n          </div>\n          {(getLoginUser() == null || getLoginUser() === \"\") ? \"\" : (\n            <>\n              <div className={\"nav-item\"}>\n                <a href=\"/home\">Home</a>\n              </div>\n              <div className={\"nav-item\"}>\n                <a href=\"/users\">Users</a>\n              </div>\n              <div className={\"nav-item\"}>\n                <a href=\"/following\">Following/Followers</a>\n              </div>\n              <div className={\"right\"}>\n                <div className={\"nav-item\"}>\n                  <a href=\"#\" onClick={() => {\n                    setLoginUser(\"\");\n                    window.location = \"/\"\n                  }}>Logout</a>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <div className={\"container\"}>\n        <Routes>\n          <Route exact path='/' element={<LoginPage key={1}/>}></Route>\n          <Route exact path='/home' element={<HomePage key={1} user_id={getLoginUser()}/>}></Route>\n          <Route exact path='/users' element={<UsersPage key={1}/>}></Route>\n          <Route exact path='/following' element={<FollowPage key={1} user_id={getLoginUser()}/>}></Route>\n          <Route exact path='/register' element={<RegisterPage key={1}/>}></Route>\n          <Route exact path='/user_detail' element={<HomePage></HomePage>}></Route>\n          <Route path='/detail' element={<TwitterDetailPage/>}></Route>\n        </Routes>\n      </div>\n    </Router>\n  </div>);\n}\n\nexport default App;\n","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\config.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\RegisterPage.js",["78"],[],"import \"../css/RegisterPage.css\"\r\nimport {baseurl, setLoginUser} from \"../config\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {post} from \"../utils\";\r\n\r\nexport function RegisterPage(props) {\r\n\r\n  let [username, setUsername] = useState(\"\")\r\n  let [password, setPassword] = useState(\"\")\r\n  let [confirm, setConfirm] = useState(\"\")\r\n  let [nickname, setNickname] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setLoginUser(\"\");\r\n  }, [])\r\n\r\n  return (<div>\r\n      <div>\r\n        <h2>Register</h2>\r\n      </div>\r\n\r\n      <div className={\"field\"}>\r\n        <span>Username: </span>\r\n        <input type={\"text\"} value={username} onChange={e => setUsername(e.target.value)}/>\r\n      </div>\r\n      <div className={\"field\"}>\r\n        <span>Nickname: </span>\r\n        <input type={\"text\"} value={nickname} onChange={e => setNickname(e.target.value)}/>\r\n      </div>\r\n      <div className={\"field\"}>\r\n        <span>Password: </span>\r\n        <input type={\"password\"} value={password} onChange={e => setPassword(e.target.value)}/>\r\n      </div>\r\n      <div className={\"field\"}>\r\n        <span>Confirm: </span>\r\n        <input type={\"password\"} value={confirm} onChange={e => setConfirm(e.target.value)}/>\r\n      </div>\r\n      <div>\r\n        <button className={\"btn-ok\"} onClick={async () => {\r\n          if (password.length > 0) {\r\n            if (confirm == password) {\r\n              let r = await post(`${baseurl}/register`, {username, password, nickname})\r\n              if (r.success) {\r\n                setLoginUser(username)\r\n                window.location = '/'\r\n              } else {\r\n                alert(r.error)\r\n                window.location = '/register'\r\n              }\r\n            } else {\r\n              alert(\"Password and confirm should be the same\")\r\n            }\r\n          } else {\r\n            alert(\"Password should not be empty\")\r\n          }\r\n        }}>OK\r\n        </button>\r\n        <button className={\"btn-cancel\"} onClick={() => {\r\n          window.location = \"/\"\r\n        }}>Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nRegisterPage.propTypes = {};\r\n","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\HomePage.js",["79"],[],"import '../css/HomePage.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {baseurl, getLoginUser} from \"../config\";\r\nimport {TwitterItem} from \"../components/TwitterItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport {post} from \"../utils\";\r\n\r\n\r\nexport function HomePage(props) {\r\n  let {user_id} = props\r\n  if (user_id === undefined || user_id === null) {\r\n    const queryParameters = new URLSearchParams(window.location.search)\r\n    user_id = queryParameters.get(\"id\")\r\n  }\r\n\r\n  let [twitterList, setTwitterList] = useState([])\r\n  let [content, setContent] = useState(\"\")\r\n  let [isFollowed, setFollowed] = useState(false)\r\n\r\n  function refresh() {\r\n    post(`${baseurl}/list_twitters`, {username: user_id}).then(data => {\r\n      setTwitterList(data)\r\n    })\r\n    post(`${baseurl}/is_followed`, {from: getLoginUser(), to: user_id}).then(data => {\r\n      setFollowed(data.result)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    refresh()\r\n  }, [])\r\n\r\n\r\n  let toolbox = (<div className={\"reply-box\"} style={{marginBottom: \"10px\"}}>\r\n        <textarea className={\"twitter-area\"}\r\n                  onChange={(e) => setContent(e.target.value)} value={content}></textarea>\r\n      <button className={\"twitter-postbtn\"} onClick={async () => {\r\n        if (content.length < 5) {\r\n          alert(\"The minimum length of twitter is 5\")\r\n          return\r\n        }\r\n        await post(`${baseurl}/post_twitter`, {username: user_id, content: content})\r\n        refresh()\r\n        setContent(\"\")\r\n      }}>Post a twitter\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2 style={{\r\n          margin: \"20px 10px\",\r\n          display: \"inline-block\",\r\n        }}>{getLoginUser() === user_id ? \"My Home Page\" : `@${user_id} 's Home Page`}</h2>\r\n        <button className={isFollowed ? \"follow-btn-small1\" : \"follow-btn-small2\"} onClick={async () => {\r\n          if (!isFollowed) {\r\n            await post(`${baseurl}/follow`, {from: getLoginUser(), to: user_id})\r\n          } else {\r\n            await post(`${baseurl}/unfollow`, {from: getLoginUser(), to: user_id})\r\n          }\r\n          refresh()\r\n        }}>{!isFollowed ? \"Follow\" : \"UnFollow\"}</button>\r\n      </div>\r\n      {getLoginUser() === user_id ? toolbox : <div></div>}\r\n      <button className={\"follower-btn\"} onClick={() => {\r\n        window.location = `/following?id=${user_id}`\r\n      }}>Following/Followers\r\n      </button>\r\n      {twitterList.map((x, idx) => <TwitterItem key={x._id} twitter_item={x}></TwitterItem>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nHomePage.propTypes = {\r\n  user_id: PropTypes.string\r\n};\r\n","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\UsersPage.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\TwitterDetailPage.js",["80"],[],"import {baseurl, getLoginUser} from \"../config\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {TwitterItem} from \"../components/TwitterItem\";\r\nimport {ReplyItem} from \"../components/ReplyItem\";\r\nimport {post} from \"../utils\";\r\n\r\nexport function TwitterDetailPage(props) {\r\n\r\n  function refresh() {\r\n    post(`${baseurl}/get_twitter`, {twitter_id: id}).then(data => {\r\n      setTwitter(data);\r\n    })\r\n    post(`${baseurl}/get_twitter_replies`, {twitter_id: id}).then(data => {\r\n      setReplies(data);\r\n    })\r\n  }\r\n\r\n  const queryParameters = new URLSearchParams(window.location.search)\r\n  const id = queryParameters.get(\"id\")\r\n\r\n  useEffect(() => {\r\n    refresh()\r\n  }, [])\r\n\r\n  let [twitter, setTwitter] = useState({})\r\n  let [replies, setReplies] = useState([])\r\n  let [content, setContent] = useState('')\r\n\r\n\r\n  return (\r\n    <div>\r\n      <TwitterItem twitter_item={twitter}/>\r\n      <div className={\"reply-box\"}>\r\n        <textarea className={\"twitter-area\"}\r\n                  onChange={(e) => setContent(e.target.value)} value={content}></textarea>\r\n        <button className={\"twitter-postbtn\"} onClick={\r\n          async () => {\r\n            if (content.length < 5) {\r\n              alert(\"The minimum length of twitter is 5\")\r\n              return\r\n            }\r\n            await post(`${baseurl}/reply_twitter`, {username: getLoginUser(), content: content, twitter_id: id})\r\n            refresh()\r\n          }\r\n        }>Reply\r\n        </button>\r\n      </div>\r\n      <button className={\"twitter-delbtn\"} onClick={async () => {\r\n        await post(`${baseurl}/del_twitter`, {twitter_id: id})\r\n        window.location = '/home'\r\n      }}>\r\n        Delete this twitter\r\n      </button>\r\n      <div style={{height: \"20px\"}}></div>\r\n      {replies.map((x, i) => <ReplyItem key={i} reply_item={x}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nTwitterDetailPage.propTypes = {};\r\n","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\FollowPage.js",["81"],[],"import '../css/FollowPage.css';\r\n\r\nimport {useEffect, useState} from \"react\";\r\nimport {baseurl} from \"../config\";\r\nimport {UserItem} from \"../components/UserItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport {post} from \"../utils\";\r\n\r\nexport function FollowPage(props) {\r\n  let {user_id} = props\r\n  const queryParameters = new URLSearchParams(window.location.search)\r\n  let id = queryParameters.get(\"id\")\r\n  if (id) {\r\n    user_id = id\r\n  }\r\n\r\n  let [userList, setUserList] = useState([])\r\n  let [isFollowing, setIsFollowing] = useState(true)\r\n\r\n  function showFollowings() {\r\n    console.log(user_id)\r\n    post(`${baseurl}/list_followings`, {username: user_id}).then(data => {\r\n      setUserList(data)\r\n    })\r\n    setIsFollowing(true)\r\n  }\r\n\r\n  function showFollowers() {\r\n    console.log(user_id)\r\n    post(`${baseurl}/list_followers`, {username: user_id}).then(data => {\r\n      setUserList(data)\r\n    })\r\n    setIsFollowing(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    showFollowings()\r\n  }, [])\r\n\r\n  return (<div>\r\n    <div>\r\n      <button className={\"follower-btn1\"} onClick={() => showFollowings()}>Followings</button>\r\n      <button className={\"follower-btn2\"} onClick={() => showFollowers()}>Followers</button>\r\n    </div>\r\n    <div>\r\n      {userList.map((x, idx) => <UserItem key={idx} user_item={x}></UserItem>)}\r\n      {userList.length === 0 && isFollowing ? \"No following\" : \"\"}\r\n      {userList.length === 0 && !isFollowing ? \"No followers\" : \"\"}\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nFollowPage.propTypes = {\r\n  user_id: PropTypes.string\r\n};\r\n","D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\pages\\LoginPage.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\utils.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\components\\TwitterItem.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\components\\UserItem.js",[],[],"D:\\xingqian\\htmlWorkSpace\\Archive\\client\\src\\components\\ReplyItem.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":33,"column":19,"nodeType":"84","endLine":36,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":41,"column":25,"nodeType":"87","messageId":"88","endLine":41,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":31,"column":6,"nodeType":"91","endLine":31,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"90","line":23,"column":6,"nodeType":"91","endLine":23,"endColumn":8,"suggestions":"93"},{"ruleId":"89","severity":1,"message":"94","line":38,"column":6,"nodeType":"91","endLine":38,"endColumn":8,"suggestions":"95"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.","ArrayExpression",["96"],["97"],"React Hook useEffect has a missing dependency: 'showFollowings'. Either include it or remove the dependency array.",["98"],{"desc":"99","fix":"100"},{"desc":"99","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [refresh]",{"range":"104","text":"105"},{"range":"106","text":"105"},"Update the dependencies array to be: [showFollowings]",{"range":"107","text":"108"},[946,948],"[refresh]",[679,681],[992,994],"[showFollowings]"]